name: DevSecOps Pipeline Demo
on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
jobs:
  # SBOM:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Java
  #       uses: actions/setup-java@v3

  #       with:
  #         java-version: 11
  #         distribution: 'adopt'  # You can adjust the Java version as needed

  #     - name: Generate SBOM
  #       run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom

  #     - name: Upload SBOM report to artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "sbom-${{ github.run_number }}"
  #         path: target/CycloneDX-Sbom.json



  build:
    runs-on: ubuntu-latest
    env:
      RUN_NUMBER: ${{ github.run_number }}
    #needs: [ SBOM ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      # - name: Build with Maven
      #   run: mvn -B package
      
      - uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
      # - name: Get git sha short
      #   id: vars
      # #     #run: echo "sha_short::$(git rev-parse --short HEAD)"
      #   run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - id: setup-tools
        uses: buildpacks/github-actions/setup-tools@v5.5.1
      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v5.5.1
      - id: package
        run: |
          # !/usr/bin/env bash
          mvn spring-boot:build-image -Ddocker.image.tag=${RUN_NUMBER}
          docker tag docker.io/javacoffeeshop/app:latest ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}
        shell: bash
        env:
          REPO: docker.io/${{ secrets.DOCKER_HUB_USER }}

      - name: Upload SBOM report to artifact
        uses: actions/upload-artifact@v3
        with:
          name: "sbom-${{ github.run_number }}"
          path: target/CycloneDX-Sbom.json

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: '${{ secrets.DOCKER_REPO }}:${{ github.run_number }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          # severity: 'CRITICAL,HIGH'
    
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      # - name: Build Container image
      #   run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} .

      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}
      

  # opensource-security:
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

  # code-security:
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
  #       with:
  #         command: code test

  # opensource-monitor:
  #   needs: [ opensource-security, code-security ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY}}
  #       with:
  #         command: monitor

  # Docker_push:
  #     needs: [opensource-monitor]
  #     runs-on: ubuntu-latest
  
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Build Container image
  #       run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} .
  #     - name: Publish Docker image
  #       run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}

  Deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
            repository: ashishpradhan92/buildpacksdeployment   # Replace with the repository URL
            ref: main
            token: ${{secrets.AUTO_COMMIT_TOKEN }} 

  
        - name: Modify Manifest
          run: |
              # Replace the image and tag in the manifest file
              echo "GitHub Runnumber: ${{ github.run_number }}"
              sed -i "s|${{ secrets.DOCKER_REPO }}:.*|${{ secrets.DOCKER_REPO }}:${{ github.run_number }}|" ./manifest/deployment.yaml
        
        - name: Debug - Show Git Status After Changes
          run: git status
          shell: bash
  
        - name: Commit and Push Change
          run: |
              git config --global user.name "ashishpradhan92"
              git config --global user.email "ashishvpradhan92@gmail.com"
              git add ./manifest/deployment.yaml
              git commit -m "Update image tag"
              git push origin main  
          env:
            PAT_TOKEN: ${{ secrets.AUTO_COMMIT_TOKEN }}
