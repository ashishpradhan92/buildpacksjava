name: DevSecOps Pipeline Demo
on:
  push
    # branches:
    #   - dev
    #   - master  # Change to your default branch name if needed
jobs:
  # SBOM:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Java
  #       uses: actions/setup-java@v3

  #       with:
  #         java-version: 11
  #         distribution: 'adopt'  # You can adjust the Java version as needed

  #     - name: Generate SBOM
  #       run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom

  #     - name: Upload SBOM report to artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "sbom-${{ github.run_number }}"
  #         path: target/CycloneDX-Sbom.json



  build:
    runs-on: ubuntu-latest
    #needs: [ SBOM ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      # - name: Build with Maven
      #   run: mvn clean install
      
      - uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
      - name: Get git sha short
        id: vars
          #run: echo "sha_short::$(git rev-parse --short HEAD)"
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      # - name: Install Buildpacks
      #   run: |
      #     curl -sL https://github.com/buildpacks/pack/releases/download/v0.25.0/pack-v0.25.0-linux.tgz | tar xvz
      #     sudo mv pack /usr/local/bin/pack
  
      # - name: Build with Buildpacks
      #   run: |
      #     pack build --path . --builder heroku/buildpacks:20 --env BP_JVM_VERSION=11 --publish ${REPO}/cnb:sha-${{ steps.vars.outputs.sha_short }}
      - id: setup-tools
        uses: buildpacks/github-actions/setup-tools@v5.1.0
      - id: setup-pack
        uses: buildpacks/github-actions/setup-pack@v5.1.0
      - id: package
        run: |
          #!/usr/bin/env bash
          pack build --path .  --builder heroku/buildpacks:20 --publish ${REPO}/cnb:sha-${{ steps.vars.outputs.sha_short }}   
        shell: bash
        env:
          REPO: docker.io/${{ secrets.DOCKER_HUB_USER }}

  # opensource-security:
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}

  # code-security:
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       continue-on-error: true
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY }}
  #       with:
  #         command: code test

  # opensource-monitor:
  #   needs: [ opensource-security, code-security ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/maven@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_KEY}}
  #       with:
  #         command: monitor

  # Docker_push:
  #     needs: [opensource-monitor]
  #     runs-on: ubuntu-latest
  
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Build Container image
  #       run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} .
  #     - name: Publish Docker image
  #       run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.run_number }}

  # Deploy:
  #     needs: Docker_push
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Checkout Repository
  #         uses: actions/checkout@v3
  #         with:
  #           repository: Ragavendira1/javacoffeeshop   # Replace with the repository URL
  #           ref: main 
  #           token: ${{secrets.PAT_TOKEN }}


  
  #       - name: Modify Manifest
  #         run: |
  #             # Replace the image and tag in the manifest file
  #             echo "GitHub Runnumber: ${{ github.run_number }}"
  #             sed -i "s|xplatformexpleo/devsecops:.*|xplatformexpleo/devsecops:${{ github.run_number }}|" ./manifest/deployment.yaml
        
  #       - name: Debug - Show Git Status After Changes
  #         run: git status
  #         shell: bash
  
  #       - name: Commit and Push Change
  #         run: |
  #             git config --global user.name "Ragavendira1"
  #             git config --global user.email "rragavendira@gmail.com"
  #             git add ./manifest/deployment.yaml
  #             git commit -m "Update image tag"
  #             git push origin main  
  #         env:
  #           PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
